import numpy as np
import math


class Ray:
    """ Simple ray class. Uses numpy arrays. Note that the direction may not be unit length"""

    def __init__(self, origin, direction):
        """ Initialize the ray with origin and direction"""
        self.o = origin
        self.d = direction

    def getPoint(self, t):
        """Returns the point along the ray generated by parameter t"""
        return self.o + t * self.d

class Color:
    def __init__(self,r,g,b):
        self.r = r
        self.g = g
        self.b = b


class Vector:
    def __init__(self, x,y,z):
        self.x = x
        self.y = y
        self.z = z

    def normalize(self):
        len_val = math.sqrt(self.x * self.x + self.y * self.y + self.z * self.z)
        self.x = self.x / len_val
        self.y = self.y / len_val
        self.z = self.z / len_val
        return self

    def cross(self, other):
        return Vector(self.y * other.z - self.z * other.y, self.z * other.x - self.x * other.z,
                      self.x * other.y - self.y * other.x)

class Point():
    def __init__(self, x, y, z):

        self.x = x
        self.y = y
        self.z = z
        self.w = 1